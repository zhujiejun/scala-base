/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/scala_plugin.html
 */

plugins {
    // Apply the scala plugin to add support for Scala
    id 'scala'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the scala plugin to add application for Scala
    //id 'application'

    // Apply the scala plugin to add application for Scala
    id 'com.github.johnrengelman.shadow' version '6.0.0'
}

apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    maven { url "https://maven.aliyun.com/repository/google" }
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/releases" }
    maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    jcenter()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.2'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:null'
    testImplementation 'org.scalatest:scalatest_2.13:3.1.2'
    testImplementation 'org.scalatestplus:junit-4-12_2.13:3.1.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'

    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
}

shadowJar {
    setZip64(true)
    setProperty("archiveBaseName", "scala-base")
    setProperty("archiveVersion", "1.0.0")
    setProperty("archiveClassifier", "")
    manifest {
        attributes "Main-Class": "com.zhujiejun.scala.Hello"
    }
    configurations = [project.configurations.compileClasspath]
}
